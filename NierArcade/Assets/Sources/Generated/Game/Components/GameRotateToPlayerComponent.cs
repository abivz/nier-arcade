//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RotateToPlayerComponent rotateToPlayer { get { return (RotateToPlayerComponent)GetComponent(GameComponentsLookup.RotateToPlayer); } }
    public bool hasRotateToPlayer { get { return HasComponent(GameComponentsLookup.RotateToPlayer); } }

    public void AddRotateToPlayer(float newSpeed) {
        var index = GameComponentsLookup.RotateToPlayer;
        var component = CreateComponent<RotateToPlayerComponent>(index);
        component.Speed = newSpeed;
        AddComponent(index, component);
    }

    public void ReplaceRotateToPlayer(float newSpeed) {
        var index = GameComponentsLookup.RotateToPlayer;
        var component = CreateComponent<RotateToPlayerComponent>(index);
        component.Speed = newSpeed;
        ReplaceComponent(index, component);
    }

    public void RemoveRotateToPlayer() {
        RemoveComponent(GameComponentsLookup.RotateToPlayer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRotateToPlayer;

    public static Entitas.IMatcher<GameEntity> RotateToPlayer {
        get {
            if (_matcherRotateToPlayer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RotateToPlayer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRotateToPlayer = matcher;
            }

            return _matcherRotateToPlayer;
        }
    }
}
