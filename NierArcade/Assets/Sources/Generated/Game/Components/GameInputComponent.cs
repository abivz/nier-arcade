//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity inputEntity { get { return GetGroup(GameMatcher.Input).GetSingleEntity(); } }
    public InputComponent input { get { return inputEntity.input; } }
    public bool hasInput { get { return inputEntity != null; } }

    public GameEntity SetInput(float newMoveHorizontal, float newMoveVertical, float newRotationHorizontal, float newRotationVertical, bool newFire) {
        if (hasInput) {
            throw new Entitas.EntitasException("Could not set Input!\n" + this + " already has an entity with InputComponent!",
                "You should check if the context already has a inputEntity before setting it or use context.ReplaceInput().");
        }
        var entity = CreateEntity();
        entity.AddInput(newMoveHorizontal, newMoveVertical, newRotationHorizontal, newRotationVertical, newFire);
        return entity;
    }

    public void ReplaceInput(float newMoveHorizontal, float newMoveVertical, float newRotationHorizontal, float newRotationVertical, bool newFire) {
        var entity = inputEntity;
        if (entity == null) {
            entity = SetInput(newMoveHorizontal, newMoveVertical, newRotationHorizontal, newRotationVertical, newFire);
        } else {
            entity.ReplaceInput(newMoveHorizontal, newMoveVertical, newRotationHorizontal, newRotationVertical, newFire);
        }
    }

    public void RemoveInput() {
        inputEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InputComponent input { get { return (InputComponent)GetComponent(GameComponentsLookup.Input); } }
    public bool hasInput { get { return HasComponent(GameComponentsLookup.Input); } }

    public void AddInput(float newMoveHorizontal, float newMoveVertical, float newRotationHorizontal, float newRotationVertical, bool newFire) {
        var index = GameComponentsLookup.Input;
        var component = CreateComponent<InputComponent>(index);
        component.MoveHorizontal = newMoveHorizontal;
        component.MoveVertical = newMoveVertical;
        component.RotationHorizontal = newRotationHorizontal;
        component.RotationVertical = newRotationVertical;
        component.Fire = newFire;
        AddComponent(index, component);
    }

    public void ReplaceInput(float newMoveHorizontal, float newMoveVertical, float newRotationHorizontal, float newRotationVertical, bool newFire) {
        var index = GameComponentsLookup.Input;
        var component = CreateComponent<InputComponent>(index);
        component.MoveHorizontal = newMoveHorizontal;
        component.MoveVertical = newMoveVertical;
        component.RotationHorizontal = newRotationHorizontal;
        component.RotationVertical = newRotationVertical;
        component.Fire = newFire;
        ReplaceComponent(index, component);
    }

    public void RemoveInput() {
        RemoveComponent(GameComponentsLookup.Input);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInput;

    public static Entitas.IMatcher<GameEntity> Input {
        get {
            if (_matcherInput == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Input);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInput = matcher;
            }

            return _matcherInput;
        }
    }
}
